{
    "/document_agi_computer_control/build_website.py": "Generate Website from Template and JSON Data",
    "/document_agi_computer_control/build_website.py:1-37": "Defining `parse_arguments()` Function",
    "/document_agi_computer_control/build_website.py:38-78": "Template-based Website Generation",
    "/document_agi_computer_control/build_website.py:79-86": "JSON Data Processing and Title Dictionary Creation",
    "/document_agi_computer_control/cache_db_context.py": "Cache Management with TinyDB and Testing",
    "/document_agi_computer_control/cache_db_context.py:1-50": "TinyDB Cache Manager Class",
    "/document_agi_computer_control/cache_db_context.py:108-144": "Database Context Manager for Record Verification",
    "/document_agi_computer_control/cache_db_context.py:145-183": "Cache, Verify, Generate and Check (CVGC) Manager",
    "/document_agi_computer_control/cache_db_context.py:184-217": "Database Record Verification and Insertion Functions",
    "/document_agi_computer_control/cache_db_context.py:218-250": "Source-Target Record Manager",
    "/document_agi_computer_control/cache_db_context.py:251-280": "Generate and Store Target Paths",
    "/document_agi_computer_control/cache_db_context.py:281-308": "Cache Management in Computer Control System",
    "/document_agi_computer_control/cache_db_context.py:309-345": "Processing and Writing Cache Files",
    "/document_agi_computer_control/cache_db_context.py:346-379": "Test File Management Functions",
    "/document_agi_computer_control/cache_db_context.py:380-407": "Function for Listing Directory Items",
    "/document_agi_computer_control/cache_db_context.py:408-426": "Test Source Walker and Generator",
    "/document_agi_computer_control/cache_db_context.py:51-79": "File Comparison Class",
    "/document_agi_computer_control/cache_db_context.py:80-107": "Database File Retrieval and Verification Class",
    "/document_agi_computer_control/code_view_demo.py": "Greet Function Demo (15x)",
    "/document_agi_computer_control/codepiece_summarizer.py": "CodePiece Summarizer with LLM",
    "/document_agi_computer_control/codepiece_summarizer.py:1-35": "Comment Summarizer Function",
    "/document_agi_computer_control/codepiece_summarizer.py:36-43": "Recursive Pairwise Comment Combining",
    "/document_agi_computer_control/custom_doc_writer.py": "Custom Doc Writer with Progress Visualization",
    "/document_agi_computer_control/custom_doc_writer.py:1-37": "Custom Document Writer Implementation",
    "/document_agi_computer_control/custom_doc_writer.py:114-145": "Doc Writer Class for Limits and Cutting",
    "/document_agi_computer_control/custom_doc_writer.py:146-170": "Split Line Function for Queue",
    "/document_agi_computer_control/custom_doc_writer.py:171-200": "Custom Doc Writer: Prepare, Strip, Count, Cut",
    "/document_agi_computer_control/custom_doc_writer.py:201-229": "Custom Document Writer for Character Limits",
    "/document_agi_computer_control/custom_doc_writer.py:231-258": "Custom Document Writer Methods",
    "/document_agi_computer_control/custom_doc_writer.py:259-289": "Custom Doc Writer: Process and Collect Content Functions",
    "/document_agi_computer_control/custom_doc_writer.py:290-326": "Split-Process Line Function",
    "/document_agi_computer_control/custom_doc_writer.py:327-362": "Processing Content with LLM: Two-Step Approach",
    "/document_agi_computer_control/custom_doc_writer.py:363-395": "Custom Document Writer for LLMs",
    "/document_agi_computer_control/custom_doc_writer.py:396-430": "AI-Powered Custom Document Writer",
    "/document_agi_computer_control/custom_doc_writer.py:40-85": "Custom Doc Process Queue Class",
    "/document_agi_computer_control/custom_doc_writer.py:431-469": "Generate Code Comment Components",
    "/document_agi_computer_control/custom_doc_writer.py:470-506": "Generate LLM Code Prompts",
    "/document_agi_computer_control/custom_doc_writer.py:507-540": "Code Prompt Generator",
    "/document_agi_computer_control/custom_doc_writer.py:86-112": "Custom Document Writer Initialization",
    "/document_agi_computer_control/ensure_fdignore_with_doc.py": "Ensure .fdignore Includes \"docs\"\n(alternatively: Include \"docs\" in .fdignore)",
    "/document_agi_computer_control/estimate_utils.py": "Estimate File Processing Time",
    "/document_agi_computer_control/example.py": "Hello World Generator",
    "/document_agi_computer_control/identify_utils.py": "Language Detector: Identify Utils",
    "/document_agi_computer_control/llm.py": "Initializing OpenAI Language Model",
    "/document_agi_computer_control/llm.py:1-36": "LLM Class: OpenAI Language Model Initializer",
    "/document_agi_computer_control/llm.py:37-65": "AI Model Chain Execution",
    "/document_agi_computer_control/llm.py:66-92": "LLM Streaming and Token Counting",
    "/document_agi_computer_control/path_select_utils.py": "Path Selection Utilities for Documentation",
    "/document_agi_computer_control/recursive_document_writer.py": "Recursive Document Writer: OpenAI Code Commenting",
    "/document_agi_computer_control/recursive_document_writer.py:1-37": "Recursive Directory File Processor",
    "/document_agi_computer_control/recursive_document_writer.py:114-147": "Incremental Document Renderer",
    "/document_agi_computer_control/recursive_document_writer.py:148-174": "Python Functions for Data Handling and Output File Writing",
    "/document_agi_computer_control/recursive_document_writer.py:175-198": "Update Data and File Mapping Function",
    "/document_agi_computer_control/recursive_document_writer.py:199-219": "Initialize Render Dictionary and Iterate Sources",
    "/document_agi_computer_control/recursive_document_writer.py:220-250": "Multi-Step Render Parameter Processing",
    "/document_agi_computer_control/recursive_document_writer.py:251-279": "Split and JSONize Dataset",
    "/document_agi_computer_control/recursive_document_writer.py:280-310": "Dynamic Template Renderer with Subprocess Execution",
    "/document_agi_computer_control/recursive_document_writer.py:311-333": "Recursive Document Writer: Python Script",
    "/document_agi_computer_control/recursive_document_writer.py:38-72": "Scan and Write Comments to Target Directory",
    "/document_agi_computer_control/recursive_document_writer.py:73-113": "Class-Extended Searchable Dict with Insertion Methods",
    "/document_agi_computer_control/sitemap_generator/main.py": "Sitemap Generator Python Script",
    "/document_agi_computer_control/sitemap_generator/main.py:1-35": "Sitemap Generator Setup",
    "/document_agi_computer_control/sitemap_generator/main.py:36-47": "Template-based Sitemap Generator",
    "/document_agi_computer_control/slice_utils.py": "Chunked Dictionary Generator",
    "/document_agi_computer_control/slice_utils.py:1-32": "Dividing Dict into Chunks with Generator",
    "/document_agi_computer_control/slice_utils.py:33-37": "Chunked Dictionary Processing with Generator",
    "/document_agi_computer_control/stdout_redirect_progress/main.py": "Asyncio Subprocess Progress Bar",
    "/document_agi_computer_control/stdout_redirect_progress/main.py:1-33": "VisualIgnoreApp: Textual App with Log and Progress",
    "/document_agi_computer_control/stdout_redirect_progress/main.py:100-124": "Unbuffered Subprocess Progress Parsing",
    "/document_agi_computer_control/stdout_redirect_progress/main.py:125-152": "Asynchronous Subprocess Output Handler",
    "/document_agi_computer_control/stdout_redirect_progress/main.py:35-62": "Progress Bar with Logging Widget",
    "/document_agi_computer_control/stdout_redirect_progress/main.py:64-99": "Asynchronous Stdout/Stderr Reader",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py": "Asynchronous Redirect and Track Progress",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:1-41": "AsyncIO Progress Bar for File Processing",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:107-131": "Read, Decode, and Progress Logging",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:132-153": "Progress Bar from Subprocess Output",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:154-187": "Async Tasks for Stdout and Stderr in Subprocess Execution",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:188-194": "Error Checker and Time Recorder",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:42-73": "Progressive Python Class Initiation",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:74-106": "Async Progress Parsing with Stdbuf Redirection",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py": "Asyncio-Based Progress Bar App",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:1-41": "Progress Bar Redirect Textual App",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:108-132": "Character-by-character stdout parsing and progress update",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:133-155": "Subprocess Execution with asyncio",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:156-190": "Subprocess Completion Checker",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:191-196": "Total Time Taken Calculator",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:42-73": "Initiating Document Processor Progress Bar",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:74-107": "Monitoring Subprocess Output with Python",
    "/document_agi_computer_control/stdout_redirect_progress/test.py": "Custom Print Function for Progress Bar and Sleep Control",
    "/document_agi_computer_control/stdout_redirect_progress/test_no_patch.py": "Intermittent Progress Bar with Hello World Printing",
    "/document_agi_computer_control/title_generator/main.py": "Multi-Purpose Title Generator",
    "/document_agi_computer_control/title_generator/main.py:1-41": "Title: \"File Title Generator\"",
    "/document_agi_computer_control/title_generator/main.py:118-149": "Iterative File Content Tracking",
    "/document_agi_computer_control/title_generator/main.py:150-171": "Split and Store File Summaries with JSON Indexing",
    "/document_agi_computer_control/title_generator/main.py:42-86": "JSON Loader and Database Setup",
    "/document_agi_computer_control/title_generator/main.py:87-117": "Title: \"LLM-Generated Titles\"",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/high_level.py": "TinyDB Brief Generation and Updates",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/high_level.py:1-32": "TinyDB: File and Directory Briefings Update",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/high_level.py:33-38": "Update File Briefs in Directory Hierarchy",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py": "AI-Driven Markdown File Hierarchy Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:1-25": "Generate Filesystem Markdown Hierarchy in Python",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:113-137": "AI-Generated Briefs for File Hierarchy",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:138-162": "Generate File and Directory Hierarchy",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:163-191": "Directory Brief Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:192-219": "Directory & File Brief Summary Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:220-242": "Cache-Based LLM Directory Briefs",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:244-273": "Generate Directory Hierarchy Brief",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:27-67": "Cache and Render Tree Hierarchy",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:274-303": "Generate Project Tree and Markdown",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:305-318": "Markdown to HTML Converter",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:68-112": "Generate Brief from Summary Hash",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py": "Recursive Markdown Folder Viewer",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:1-25": "Python FS Hierarchy Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:113-139": "Generate Tree Representation of File Directory",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:140-166": "Recursive Folder Tree Generation in HTML",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:167-197": "Directory Comment Summarizer",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:198-227": "Recursive Folder Brief Summary Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:228-254": "Alphabetical File and Directory Briefs",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:255-276": "Cache-Aided Directory Briefing",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:27-67": "Generate Tree View JSON and HTML",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:277-309": "Python Folder Hierarchy Processor",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:311-337": "Generate Directory Summary Briefs",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:339-360": "Template Rendering and File Operations",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:68-112": "Efficient File Brief Generator",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/docarray_test.py": "Embedding Index for Documents",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/docarray_test.py:1-51": "DocArray TextDoc Indexing Demo",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/docarray_test.py:52-81": "Cache Check and Embedding Calculation",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/docarray_test.py:82-94": "Nearest Neighbor Search in HNSWlib",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/llamaindex_test.py": "Vectorstore Chatbot with LLM Index",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/llamaindex_test.py:1-29": "Vector Store Setup with Llamaindex",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/llamaindex_test.py:30-60": "Initializing and Running OpenLM Pipeline",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/llamaindex_test.py:62-68": "Retrieval with VSIndex Retriever",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/llamaindex_vector.py": "VectorStore Indexing with LLAMA",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/test.py": "Llama Embeddings for Querying and Documents",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/test_hnswlib.py": "HNSW Indexing with K-NN Search",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/async_utils.py": "Asynchronous Command Execution Utilities",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py": "Python Tree Structure Visualizer",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:1-44": "Rich Library Tree Visualizer",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:106-134": "Ignoring Rules: Visual File Selector",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:137-161": "Recursive Directory Scanner",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:162-184": "Labeling File Structure Based on Line Count",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:185-222": "Reading and Verifying File Lines",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:223-261": "Updating Tree Structure and Estimating Time",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:264-300": "Processing Time Estimation for Ignored Directories",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:301-329": "Total Line Count by File Suffix",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:45-78": "Parsing and Loading JSON Files",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:79-105": "Generate Directory Subtree and Count Files",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/file_copy_by_fd.py": "File Copy by FD and Path Ignore Rules",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/file_copy_by_fd.py:1-41": "Copy Files with fd Command and Argparse",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/file_copy_by_fd.py:42-52": "Check and Copy File",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py": "Ignored Tree Comparison Tool",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py:1-36": "CLI Diff Tool for Directories",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py:125-140": "Toggle and Exit Functions",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py:37-74": "Visual File Selector by Ignore Rules",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py:75-96": "Progress Bar with ETA for File Processing",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py:97-124": "GUI Interface Error Handling and Control",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py": "Comprehensive File Manager: Main.py",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:1-35": "Pyjom: File Visualizer and Manager",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:108-132": "Recursive File Patcher",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:134-172": "Asynchronous File Size Reader",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:174-198": "Dark Mode, Restart & Exit Bindings for Visual File Selector",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:199-223": "Efficient Variable Initialization",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:224-253": "Progress Tracker: Visual File Selector Class Attributes",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:254-275": "Subprocess File Selector",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:276-296": "Ignore Rule File Check",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:297-312": "Labeling Line Counts and Updating Maps",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:313-331": "Error Checking and Labeling Node",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:331-341": "Real-Time File Selector with UI Refresh Control",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:341-352": "Label Updates and Path Checks",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:353-368": "Update Label Colors in Visual File Selector",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:36-71": "Estimating Time from Line Count or File Size",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:369-386": "Clearing Non-Selected Paths in Visual File Selector",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:386-400": "Checking and Adding File Paths",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:401-412": "Parent Directory Map Updater",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:413-424": "Error Labeling Directories in Pyjom",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:425-433": "Banner Refresh Monitor and Update",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:433-455": "Monitoring File Changes and Terminating Processes",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:456-479": "GUI State Management in main_pyjom.py",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:481-493": "Exit App Code and Main Function",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:72-107": "Counting File Lines Efficiently",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/run_simple.py": "Ignored File Comparison Script",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/run_simple.py:1-39": "Python Script for File Comparison with Ignore Rules",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/run_simple.py:40-56": "Automating Document Processing with Python",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/test_tree_visual.py": "Visual Ignore App: Test Tree Visualization",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/test_tree_visual.py:1-35": "Asynchronous Directory Comparison Tool",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/test_tree_visual.py:110-117": "VisualIgnoreApp Launcher",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/test_tree_visual.py:36-75": "Visual File Selector by Ignore Rules App",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/test_tree_visual.py:76-107": "Application UI Creation with Python",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py": "Tree-based File Selector with Ignore Rules",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:1-44": "Tree Utilities for File Operations",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:107-139": "Directory Tree Visualizer",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:140-163": "Count Directories and Cached Files",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:164-188": "Tree Utils: File/Dir Handling",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:189-226": "File Line Counter with Error Handling",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:228-268": "Iterating Through Nonexist Keys",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:269-300": "File Size and Line Counter",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:301-321": "File Selector: Total Sizes, Lines, and Errors",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:45-79": "Command Line JSON Parser and Path Checker",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:80-106": "Subtree Creation and Recursive Traversal",
    "/search_filepath_by_name/search_filepath.sh": "Finding Files with Fzf"
}