{
    "/document_agi_computer_control/build_website.py": "Generate Website from Template and JSON Data",
    "/document_agi_computer_control/build_website.py:1-37": "Defining `parse_arguments()` Function",
    "/document_agi_computer_control/build_website.py:38-78": "Template-based Website Generation",
    "/document_agi_computer_control/build_website.py:79-86": "JSON Data Processing and Title Dictionary Creation",
    "/document_agi_computer_control/cache_db_context.py": "Cache Management with TinyDB and Testing",
    "/document_agi_computer_control/cache_db_context.py:1-51": "Cache Database Management with TinyDB",
    "/document_agi_computer_control/cache_db_context.py:109-145": "Upserting Record Hashes",
    "/document_agi_computer_control/cache_db_context.py:146-184": "File Path and Hash Validation Utility",
    "/document_agi_computer_control/cache_db_context.py:185-218": "Cache Record Functions",
    "/document_agi_computer_control/cache_db_context.py:219-251": "Source File Existence Checker",
    "/document_agi_computer_control/cache_db_context.py:252-281": "Cache Manager: Process and Get Target Paths",
    "/document_agi_computer_control/cache_db_context.py:282-309": "Cache Processing Functions",
    "/document_agi_computer_control/cache_db_context.py:310-346": "Creating and Retrieving Directories",
    "/document_agi_computer_control/cache_db_context.py:347-377": "File Writing, Test Target Path Generation",
    "/document_agi_computer_control/cache_db_context.py:378-409": "Test Source Walker and File Content Assertion",
    "/document_agi_computer_control/cache_db_context.py:410-429": "Test Environment Setup and Validation",
    "/document_agi_computer_control/cache_db_context.py:52-80": "CacheDBContext Class",
    "/document_agi_computer_control/cache_db_context.py:81-108": "Database Class for Record Manipulation",
    "/document_agi_computer_control/code_view_demo.py": "Greet Function Demo (15x)",
    "/document_agi_computer_control/codepiece_summarizer.py": "CodePiece Summarizer with LLM",
    "/document_agi_computer_control/codepiece_summarizer.py:1-35": "Comment Summarizer Function",
    "/document_agi_computer_control/codepiece_summarizer.py:36-43": "Recursive Pairwise Comment Combining",
    "/document_agi_computer_control/custom_doc_writer.py": "Custom Doc Writer with Progress Visualization",
    "/document_agi_computer_control/custom_doc_writer.py:1-37": "Custom Document Writer Implementation",
    "/document_agi_computer_control/custom_doc_writer.py:114-145": "Doc Writer Class for Limits and Cutting",
    "/document_agi_computer_control/custom_doc_writer.py:146-170": "Split Line Function for Queue",
    "/document_agi_computer_control/custom_doc_writer.py:171-200": "Custom Doc Writer: Prepare, Strip, Count, Cut",
    "/document_agi_computer_control/custom_doc_writer.py:201-229": "Custom Document Writer for Character Limits",
    "/document_agi_computer_control/custom_doc_writer.py:231-258": "Custom Document Writer Methods",
    "/document_agi_computer_control/custom_doc_writer.py:259-289": "Custom Doc Writer: Process and Collect Content Functions",
    "/document_agi_computer_control/custom_doc_writer.py:290-326": "Split-Process Line Function",
    "/document_agi_computer_control/custom_doc_writer.py:327-362": "Processing Content with LLM: Two-Step Approach",
    "/document_agi_computer_control/custom_doc_writer.py:363-394": "Custom Doc Writer Function",
    "/document_agi_computer_control/custom_doc_writer.py:395-429": "Custom Document Writer Function",
    "/document_agi_computer_control/custom_doc_writer.py:40-85": "Custom Doc Process Queue Class",
    "/document_agi_computer_control/custom_doc_writer.py:430-469": "Generate Location Component in Prompt Function",
    "/document_agi_computer_control/custom_doc_writer.py:470-504": "Code Prompt Generator",
    "/document_agi_computer_control/custom_doc_writer.py:504-536": "Generate Prompt and Write Code Comment",
    "/document_agi_computer_control/custom_doc_writer.py:537-542": "Custom Document Writer Class Initialization",
    "/document_agi_computer_control/custom_doc_writer.py:86-112": "Custom Document Writer Initialization",
    "/document_agi_computer_control/ensure_fdignore_with_doc.py": "Ensure .fdignore Includes \"docs\"\n(alternatively: Include \"docs\" in .fdignore)",
    "/document_agi_computer_control/estimate_utils.py": "Estimate File Processing Time",
    "/document_agi_computer_control/example.py": "Hello World Generator",
    "/document_agi_computer_control/identify_utils.py": "Language Detector: Identify Utils",
    "/document_agi_computer_control/llm.py": "Initializing OpenAI Language Model",
    "/document_agi_computer_control/llm.py:1-36": "LLM Class: OpenAI Language Model Initializer",
    "/document_agi_computer_control/llm.py:37-65": "AI Model Chain Execution",
    "/document_agi_computer_control/llm.py:66-92": "LLM Streaming and Token Counting",
    "/document_agi_computer_control/path_select_utils.py": "Path Selection Utilities for Documentation",
    "/document_agi_computer_control/recursive_document_writer.py": "Recursive Document Writer: OpenAI Code Commenting",
    "/document_agi_computer_control/recursive_document_writer.py:1-39": "OpenAI API Setup and File Utilities",
    "/document_agi_computer_control/recursive_document_writer.py:117-152": "Document Webpage Generator",
    "/document_agi_computer_control/recursive_document_writer.py:153-180": "Recursive Template Writer",
    "/document_agi_computer_control/recursive_document_writer.py:181-206": "Updating File Data Functions",
    "/document_agi_computer_control/recursive_document_writer.py:207-230": "Assemble Render Parameters in Python",
    "/document_agi_computer_control/recursive_document_writer.py:231-256": "Reduce Git Folder Size with Recursive File Sorter",
    "/document_agi_computer_control/recursive_document_writer.py:257-286": "Data Splitting and JSON Writing",
    "/document_agi_computer_control/recursive_document_writer.py:287-312": "Render Template Function",
    "/document_agi_computer_control/recursive_document_writer.py:313-345": "CLI Executor with Template Rendering",
    "/document_agi_computer_control/recursive_document_writer.py:346-355": "Recursive Document Writer",
    "/document_agi_computer_control/recursive_document_writer.py:40-76": "Recursive File Operations",
    "/document_agi_computer_control/recursive_document_writer.py:77-116": "Function to Scan, Generate Comments and Write Code",
    "/document_agi_computer_control/sitemap_generator/main.py": "Sitemap Generator Python Script",
    "/document_agi_computer_control/sitemap_generator/main.py:1-35": "Sitemap Generator Setup",
    "/document_agi_computer_control/sitemap_generator/main.py:36-47": "Template-based Sitemap Generator",
    "/document_agi_computer_control/slice_utils.py": "Chunked Dictionary Generator",
    "/document_agi_computer_control/slice_utils.py:1-32": "Dividing Dict into Chunks with Generator",
    "/document_agi_computer_control/slice_utils.py:33-37": "Chunked Dictionary Processing with Generator",
    "/document_agi_computer_control/stdout_redirect_progress/main.py": "Asyncio Subprocess Progress Bar",
    "/document_agi_computer_control/stdout_redirect_progress/main.py:1-33": "VisualIgnoreApp: Textual App with Log and Progress",
    "/document_agi_computer_control/stdout_redirect_progress/main.py:124-152": "Asyncio Subprocess Execution",
    "/document_agi_computer_control/stdout_redirect_progress/main.py:35-61": "Progressive Log and Bar Updater",
    "/document_agi_computer_control/stdout_redirect_progress/main.py:62-98": "Progress Parser and Stream Readers",
    "/document_agi_computer_control/stdout_redirect_progress/main.py:99-123": "Asynchronous Progress Tracking with Python",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py": "Asynchronous Redirect and Track Progress",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:1-41": "AsyncIO Progress Bar for File Processing",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:107-131": "Read, Decode, and Progress Logging",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:132-153": "Progress Bar from Subprocess Output",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:154-187": "Async Tasks for Stdout and Stderr in Subprocess Execution",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:188-194": "Error Checker and Time Recorder",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:42-73": "Progressive Python Class Initiation",
    "/document_agi_computer_control/stdout_redirect_progress/main_once.py:74-106": "Async Progress Parsing with Stdbuf Redirection",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py": "Asyncio-Based Progress Bar App",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:1-41": "Progress Bar Redirect Textual App",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:108-132": "Character-by-character stdout parsing and progress update",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:133-154": "Capturing Progress with Concurrent Stdout & Stderr",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:155-188": "Unbuffered Subprocess Output",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:189-196": "Subprocess Return Code Checker",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:42-73": "Initiating Document Processor Progress Bar",
    "/document_agi_computer_control/stdout_redirect_progress/main_once_char_by_char.py:74-107": "Monitoring Subprocess Output with Python",
    "/document_agi_computer_control/stdout_redirect_progress/test.py": "Custom Print Function for Progress Bar and Sleep Control",
    "/document_agi_computer_control/stdout_redirect_progress/test_no_patch.py": "Intermittent Progress Bar with Hello World Printing",
    "/document_agi_computer_control/title_generator/main.py": "Multi-Purpose Title Generator",
    "/document_agi_computer_control/title_generator/main.py:1-41": "Title: \"File Title Generator\"",
    "/document_agi_computer_control/title_generator/main.py:121-148": "Generate Split Info for File Mapping",
    "/document_agi_computer_control/title_generator/main.py:149-176": "JSON Title Generator for Data Splits",
    "/document_agi_computer_control/title_generator/main.py:177-179": "Title: \"Finish Title Generation\"",
    "/document_agi_computer_control/title_generator/main.py:42-87": "TinyDB Cache Initialization and Directory Creation",
    "/document_agi_computer_control/title_generator/main.py:90-118": "LLM-Powered Title Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/high_level.py": "TinyDB Brief Generation and Updates",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/high_level.py:1-32": "TinyDB: File and Directory Briefings Update",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/high_level.py:33-38": "Update File Briefs in Directory Hierarchy",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py": "AI-Driven Markdown File Hierarchy Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:1-25": "Generate Filesystem Markdown Hierarchy in Python",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:113-137": "AI-Generated Briefs for File Hierarchy",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:138-162": "Generate File and Directory Hierarchy",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:163-191": "Directory Brief Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:192-219": "Directory & File Brief Summary Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:220-242": "Cache-Based LLM Directory Briefs",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:244-273": "Generate Directory Hierarchy Brief",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:27-67": "Cache and Render Tree Hierarchy",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:274-303": "Generate Project Tree and Markdown",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:305-318": "Markdown to HTML Converter",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main.py:68-112": "Generate Brief from Summary Hash",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py": "Recursive Markdown Folder Viewer",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:1-25": "Python FS Hierarchy Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:113-138": "Recursive Folder Tree Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:139-162": "Dynamic Directory List Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:163-195": "Folder Brief Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:196-225": "Recursive Folder Hierarchy Comment Combination",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:226-252": "Generate Folder Briefs",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:253-276": "Directory Brief Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:27-64": "Reads Metadata and Data JSON, Loads File Mappings",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:277-306": "Recursive Directory Briefs with TinyDB Cache and File Summaries",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:307-326": "Recursive Directory Hierarchy Generator",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:327-365": "Markdown to HTML Renderer",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:366-366": "Empty Closing Parenthesis",
    "/document_agi_computer_control/tree_markdown_view_folder_hierarchy/main_recursive.py:65-112": "Main Recursive Function for JSON Tree Generation",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/chat.py": "Document-based Chat with Vectorstore and Embedding",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/docarray_test.py": "Embedding Index for Documents",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/docarray_test.py:1-51": "DocArray TextDoc Indexing Demo",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/docarray_test.py:52-81": "Cache Check and Embedding Calculation",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/docarray_test.py:82-94": "Nearest Neighbor Search in HNSWlib",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/llamaindex_test.py": "Vectorstore Chatbot with LLM Index",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/llamaindex_test.py:1-29": "Vector Store Setup with Llamaindex",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/llamaindex_test.py:30-60": "Initializing and Running OpenLM Pipeline",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/llamaindex_test.py:62-68": "Retrieval with VSIndex Retriever",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/llamaindex_vector.py": "VectorStore Indexing with LLAMA",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/main.py": "Vectorstore Chatbot in Python",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/main.py:1-52": "Generating AI Chat with Vectorstore Embeddings",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/main.py:53-98": "Generative Prompts for Chat and History",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/main.py:99-108": "Else Block: Chat History Summary and Condense Prompt",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/prompts.py": "Question-Answer Prompts Generator",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/prompts.py:1-23": "Code Prompts for Technical Explanations",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/prompts.py:116-158": "Generate Folder Prompts for Documentation",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/prompts.py:160-202": "Generate Prompts for Chat and File Processing",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/prompts.py:203-225": "Generate QA Prompt for AI Assistants",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/prompts.py:226-245": "Chat Summary Prompt Generator",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/prompts.py:24-70": "Generate Queries Prompts from File Summaries",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/prompts.py:245-276": "Chat History Summary Prompt Generator",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/prompts.py:277-277": "Retrieve Previous Prompt",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/prompts.py:71-115": "Generate Prompts for File Documentation",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/test.py": "Llama Embeddings for Querying and Documents",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/test_hnswlib.py": "HNSW Indexing with K-NN Search",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/vectorindex.py": "Vector Index Python Script",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/vectorindex.py:1-44": "Index and Cache Documents Code",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/vectorindex.py:129-174": "Multidocument Hnsw Index Implementation",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/vectorindex.py:175-212": "Vector Index Code Snippet: FolderDocumentChunk Iteration",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/vectorindex.py:213-244": "Embedding Chat RAG Indexing",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/vectorindex.py:245-267": "Embedding-Based Chatbot Search",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/vectorindex.py:268-280": "Generating Responses with Vectorstore Index",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/vectorindex.py:46-82": "Vector Index Initialization",
    "/document_agi_computer_control/vectorstore_embedding_chat_rag/vectorindex.py:84-128": "JSON Data Update and MD5 Hashing",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/async_utils.py": "Asynchronous Command Execution Utilities",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py": "Python Tree Structure Visualizer",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:1-44": "Rich Library Tree Visualizer",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:106-134": "Ignoring Rules: Visual File Selector",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:137-161": "Recursive Directory Scanner",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:162-184": "Labeling File Structure Based on Line Count",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:185-222": "Reading and Verifying File Lines",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:223-261": "Updating Tree Structure and Estimating Time",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:264-300": "Processing Time Estimation for Ignored Directories",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:301-329": "Total Line Count by File Suffix",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:45-78": "Parsing and Loading JSON Files",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/display_tree_structure.py:79-105": "Generate Directory Subtree and Count Files",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/file_copy_by_fd.py": "File Copy by FD and Path Ignore Rules",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/file_copy_by_fd.py:1-41": "Copy Files with fd Command and Argparse",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/file_copy_by_fd.py:42-52": "Check and Copy File",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py": "Ignored Tree Comparison Tool",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py:1-36": "CLI Diff Tool for Directories",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py:125-140": "Toggle and Exit Functions",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py:37-74": "Visual File Selector by Ignore Rules",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py:75-96": "Progress Bar with ETA for File Processing",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main.py:97-124": "GUI Interface Error Handling and Control",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py": "Comprehensive File Manager: Main.py",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:1-35": "Pyjom: File Visualizer and Manager",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:108-132": "Recursive File Patcher",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:134-172": "Asynchronous File Size Reader",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:174-198": "Dark Mode, Restart & Exit Bindings for Visual File Selector",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:199-223": "Efficient Variable Initialization",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:224-253": "Progress Tracker: Visual File Selector Class Attributes",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:254-275": "Subprocess File Selector",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:276-296": "Ignore Rule File Check",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:297-312": "Labeling Line Counts and Updating Maps",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:313-331": "Error Checking and Labeling Node",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:331-341": "Real-Time File Selector with UI Refresh Control",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:341-352": "Label Updates and Path Checks",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:353-368": "Update Label Colors in Visual File Selector",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:36-71": "Estimating Time from Line Count or File Size",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:369-386": "Clearing Non-Selected Paths in Visual File Selector",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:386-400": "Checking and Adding File Paths",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:401-412": "Parent Directory Map Updater",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:413-424": "Error Labeling Directories in Pyjom",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:425-433": "Banner Refresh Monitor and Update",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:433-455": "Monitoring File Changes and Terminating Processes",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:456-479": "GUI State Management in main_pyjom.py",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:481-493": "Exit App Code and Main Function",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/main_pyjom.py:72-107": "Counting File Lines Efficiently",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/run_simple.py": "Ignored File Comparison Script",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/run_simple.py:1-39": "Python Script for File Comparison with Ignore Rules",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/run_simple.py:40-56": "Automating Document Processing with Python",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/test_tree_visual.py": "Visual Ignore App: Test Tree Visualization",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/test_tree_visual.py:1-35": "Asynchronous Directory Comparison Tool",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/test_tree_visual.py:110-117": "VisualIgnoreApp Launcher",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/test_tree_visual.py:36-75": "Visual File Selector by Ignore Rules App",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/test_tree_visual.py:76-107": "Application UI Creation with Python",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py": "Tree-based File Selector with Ignore Rules",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:1-44": "Tree Utilities for File Operations",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:107-139": "Directory Tree Visualizer",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:140-163": "Count Directories and Cached Files",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:164-188": "Tree Utils: File/Dir Handling",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:189-226": "File Line Counter with Error Handling",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:228-268": "Iterating Through Nonexist Keys",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:269-300": "File Size and Line Counter",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:301-321": "File Selector: Total Sizes, Lines, and Errors",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:45-79": "Command Line JSON Parser and Path Checker",
    "/document_agi_computer_control/visual_file_selector_by_ignore_rules/tree_utils.py:80-106": "Subtree Creation and Recursive Traversal",
    "/search_filepath_by_name/search_filepath.sh": "Finding Files with Fzf"
}